{"version":3,"sources":["Ajax.js"],"names":["Ajax","allHeaders","headers","pairs","split","i","length","index","indexOf","name","substring","value","push","url","method","body","opt_headers","opt_params","opt_timeout","opt_sync","opt_withCredentials","request","XMLHttpRequest","promise","resolve","reject","onload","aborted","onerror","error","Error","thenCatch","reason","abort","thenAlways","clearTimeout","timeout","addParametersFromMultiMap","toString","open","withCredentials","names","forEach","setRequestHeader","getAll","join","send","setTimeout","cancel"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAMMA,I;;;;;;;wCAWuBC,U,EAAY;AACvC,QAAIC,UAAU,EAAd;AACA,QAAI,CAACD,UAAL,EAAiB;AAChB,YAAOC,OAAP;AACA;AACD,QAAIC,QAAQF,WAAWG,KAAX,CAAiB,MAAjB,CAAZ;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACtC,SAAIE,QAAQJ,MAAME,CAAN,EAASG,OAAT,CAAiB,IAAjB,CAAZ;AACA,SAAID,QAAQ,CAAZ,EAAe;AACd,UAAIE,OAAON,MAAME,CAAN,EAASK,SAAT,CAAmB,CAAnB,EAAsBH,KAAtB,CAAX;AACA,UAAII,QAAQR,MAAME,CAAN,EAASK,SAAT,CAAmBH,QAAQ,CAA3B,CAAZ;AACAL,cAAQU,IAAR,CAAa;AACZH,aAAMA,IADM;AAEZE,cAAOA;AAFK,OAAb;AAIA;AACD;AACD,WAAOT,OAAP;AACA;;;2BAecW,G,EAAKC,M,EAAQC,I,EAAMC,W,EAAaC,U,EAAYC,W,EAAaC,Q,EAAUC,mB,EAAqB;AACtGP,UAAMA,OAAO,EAAb;AACAC,aAASA,UAAU,KAAnB;;AAEA,QAAIO,UAAU,IAAIC,cAAJ,EAAd;;AAEA,QAAIC,UAAU,gCAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACnDJ,aAAQK,MAAR,GAAiB,YAAW;AAC3B,UAAIL,QAAQM,OAAZ,EAAqB;AACpBN,eAAQO,OAAR;AACA;AACA;AACDJ,cAAQH,OAAR;AACA,MAND;AAOAA,aAAQO,OAAR,GAAkB,YAAW;AAC5B,UAAIC,QAAQ,IAAIC,KAAJ,CAAU,eAAV,CAAZ;AACAD,YAAMR,OAAN,GAAgBA,OAAhB;AACAI,aAAOI,KAAP;AACA,MAJD;AAKA,KAba,EAaXE,SAbW,CAaD,UAASC,MAAT,EAAiB;AAC7BX,aAAQY,KAAR;AACA,WAAMD,MAAN;AACA,KAhBa,EAgBXE,UAhBW,CAgBA,YAAW;AACxBC,kBAAaC,OAAb;AACA,KAlBa,CAAd;;AAoBA,QAAInB,UAAJ,EAAgB;AACfJ,WAAM,kBAAQA,GAAR,EAAawB,yBAAb,CAAuCpB,UAAvC,EAAmDqB,QAAnD,EAAN;AACA;;AAEDjB,YAAQkB,IAAR,CAAazB,MAAb,EAAqBD,GAArB,EAA0B,CAACM,QAA3B;;AAEA,QAAIC,mBAAJ,EAAyB;AACxBC,aAAQmB,eAAR,GAA0B,IAA1B;AACA;;AAED,QAAIxB,WAAJ,EAAiB;AAChBA,iBAAYyB,KAAZ,GAAoBC,OAApB,CAA4B,UAASjC,IAAT,EAAe;AAC1CY,cAAQsB,gBAAR,CAAyBlC,IAAzB,EAA+BO,YAAY4B,MAAZ,CAAmBnC,IAAnB,EAAyBoC,IAAzB,CAA8B,IAA9B,CAA/B;AACA,MAFD;AAGA;;AAEDxB,YAAQyB,IAAR,CAAa,kBAAM/B,IAAN,IAAcA,IAAd,GAAqB,IAAlC;;AAEA,QAAI,4BAAgBG,WAAhB,CAAJ,EAAkC;AACjC,SAAIkB,UAAUW,WAAW,YAAW;AACnCxB,cAAQyB,MAAR,CAAe,iBAAf;AACA,MAFa,EAEX9B,WAFW,CAAd;AAGA;;AAED,WAAOK,OAAP;AACA;;;;;;mBAIavB,I","file":"Ajax.js","sourcesContent":["'use strict';\n\nimport { isDef, isDefAndNotNull } from 'metal';\nimport Uri from 'metal-uri';\nimport { CancellablePromise as Promise } from 'metal-promise';\n\nclass Ajax {\n\n\t/**\n\t * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n\t * response headers according to the format described on the spec:\n\t * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n\t * This method parses that string into a user-friendly name/value pair\n\t * object.\n\t * @param {string} allHeaders All headers as string.\n\t * @return {!Array.<Object<string, string>>}\n\t */\n\tstatic parseResponseHeaders(allHeaders) {\n\t\tvar headers = [];\n\t\tif (!allHeaders) {\n\t\t\treturn headers;\n\t\t}\n\t\tvar pairs = allHeaders.split('\\u000d\\u000a');\n\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\tvar index = pairs[i].indexOf('\\u003a\\u0020');\n\t\t\tif (index > 0) {\n\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\theaders.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n\n\t/**\n\t * Requests the url using XMLHttpRequest.\n\t * @param {!string} url\n\t * @param {!string} method\n\t * @param {?string} body\n\t * @param {MultiMap=} opt_headers\n\t * @param {MultiMap=} opt_params\n\t * @param {number=} opt_timeout\n\t * @param {boolean=} opt_sync\n\t * @param {boolean=} opt_withCredentials\n\t * @return {Promise} Deferred ajax request.\n\t * @protected\n\t */\n\tstatic request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync, opt_withCredentials) {\n\t\turl = url || '';\n\t\tmethod = method || 'GET';\n\n\t\tvar request = new XMLHttpRequest();\n\n\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\trequest.onload = function() {\n\t\t\t\tif (request.aborted) {\n\t\t\t\t\trequest.onerror();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(request);\n\t\t\t};\n\t\t\trequest.onerror = function() {\n\t\t\t\tvar error = new Error('Request error');\n\t\t\t\terror.request = request;\n\t\t\t\treject(error);\n\t\t\t};\n\t\t}).thenCatch(function(reason) {\n\t\t\trequest.abort();\n\t\t\tthrow reason;\n\t\t}).thenAlways(function() {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\n\t\tif (opt_params) {\n\t\t\turl = new Uri(url).addParametersFromMultiMap(opt_params).toString();\n\t\t}\n\n\t\trequest.open(method, url, !opt_sync);\n\n\t\tif (opt_withCredentials) {\n\t\t\trequest.withCredentials = true;\n\t\t}\n\n\t\tif (opt_headers) {\n\t\t\topt_headers.names().forEach(function(name) {\n\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t});\n\t\t}\n\n\t\trequest.send(isDef(body) ? body : null);\n\n\t\tif (isDefAndNotNull(opt_timeout)) {\n\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t}, opt_timeout);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n}\n\nexport default Ajax;\n"]}